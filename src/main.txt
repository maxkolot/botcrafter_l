Название файла: App.css
Расположение файла: ./App.css

.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}


Название файла: App.test.js
Расположение файла: ./App.test.js

import { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});


Название файла: index.css
Расположение файла: ./index.css

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}


Название файла: reportWebVitals.js
Расположение файла: ./reportWebVitals.js

const reportWebVitals = onPerfEntry => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;


Название файла: setupTests.js
Расположение файла: ./setupTests.js

// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';


Название файла: index.js
Расположение файла: ./index.js

import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();


Название файла: styles.css
Расположение файла: ./styles.css

html, body, #root {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: sans-serif;
}

.react-flow__edge-path {
    stroke: #333;
    stroke-width: 2;
}

.temp .react-flow__edge-path {
    stroke: #bbb;
    stroke-dasharray: 5 5;
}

.react-flow__connection-path {
    stroke: #ff0000; /* Яркий красный цвет */
    stroke-width: 2;
    stroke-dasharray: 5, 5;
  }
  
  .temp .react-flow__edge-path {
    stroke: #ff0000; /* Яркий красный цвет */
    stroke-width: 2;
    stroke-dasharray: 5, 5;
  }
  

Название файла: App.js
Расположение файла: ./App.js

import React, { useState } from "react";
import { ReactFlowProvider } from 'react-flow-renderer';
import TokenValidationScreen from "./components/TokenValidationScreen";
import MainScreen from "./components/MainScreen";

const App = () => {
  const [tokenValid, setTokenValid] = useState(false);

  return (
    <div >
      {tokenValid ? (
        <ReactFlowProvider >
          <MainScreen />
        </ReactFlowProvider>
      ) : (
        <TokenValidationScreen onTokenValid={() => setTokenValid(true)} />
      )}
    </div>
  );
};

export default App;
 

Название файла: logo.svg
Расположение файла: ./logo.svg

<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 841.9 595.3"><g fill="#61DAFB"><path d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"/><circle cx="420.9" cy="296.5" r="45.7"/><path d="M520.5 78.1z"/></g></svg>

Название файла: CustomConnectionLine.js
Расположение файла: ./components\CustomConnectionLine.js

import React from 'react';
import { getBezierPath } from 'react-flow-renderer';

const CustomConnectionLine = ({ fromX, fromY, toX, toY }) => {
  const edgePath = getBezierPath({
    sourceX: fromX,
    sourceY: fromY,
    targetX: toX,
    targetY: toY,
    sourcePosition: 'right',
    targetPosition: 'left',
  });

  return (
    <path
      className="react-flow__connection-path"
      d={edgePath}
      stroke="red"
      strokeWidth={2}
      strokeDasharray="5,5"
    />
  );
};

export default CustomConnectionLine;


Название файла: tokenCheck.js
Расположение файла: ./tokenCheck.js

const express = require("express");
const bodyParser = require("body-parser");
const { exec } = require("child_process");

const app = express();
const PORT = 5000;

app.use(bodyParser.json());

app.use((req, res, next) => {
  res.header("Access-Control-Allow-Origin", "*");
  res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
  res.header("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS");
  next();
});

app.post("/tokenCheck", (req, res) => {
  const { token } = req.body;
  console.log(`Received token: ${token}`);
  if (!token) {
    res.status(400).send({ valid: false, error: "Token is required" });
    return;
  }
  exec(`python token_check.py ${token}`, (error, stdout, stderr) => {
    if (error) {
      console.error(`exec error: ${error}`);
      res.status(500).send({ valid: false, error: stderr });
      return;
    }
    console.log(`stdout: ${stdout}`);
    console.error(`stderr: ${stderr}`);
    try {
      const result = JSON.parse(stdout);
      res.send(result);
    } catch (e) {
      console.error(`JSON parse error: ${e}`);
      res.status(500).send({ valid: false });
    }
  });
});

app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});


Название файла: 123.jpg
Расположение файла: ./components\123.jpg

���� JFIF  H H  �� 8Photoshop 3.0 8BIM      8BIM%     ��ُ ��	���B~�� C 


		
%# , #&')*)-0-(0%()(�� C



(((((((((((((((((((((((((((((((((((((((((((((((((((�� o4" ��            ��            ��    �m���u��U5UqkWWSL�hȇr�iV�n���%ś��5������y5���fup'yL����ؠM���5�#	��\������������ܮ��̬����M��𭚪����Z���;dBF[4dCIK���hj�(��Ѻ٬�4�f�u�Y��$e8C�f�"jpD�LvD��$Y"X�P�`�!".l����dFT���fnf��w���g=l���5�R]E���"�٦�CIK;���igf���V��������ʓS7��c&2b�5(#S�53$Jvج�$Y3SsS513S719Rۃ��3���;5��U׳Mu5WQmvwH���	P�Q	-%��Z�7uj�k;��5ٽ��T�S7&�n�O1��	����&8S�F�d�"������9���������.���ޟީޯ�ں�j����d��D$ԈHȢ��ii,��Y����W�F�s���Y���o2�$3X"&2b6(b�&�d�N
,$JC���9H��������ӛ���?���>W��u�QUu�gL�I�l��
٬��!#�BCIgV����٣[�ƻ7��ܚ�I�1#b'*b60r�F��b�B@�Y9����<���ꌬ(���ޯ��ތUN��S]��Q�%���#-�� ��ʡ#�AA[;��w�^�[��λ��&��JD�,ec�60r�&0r�&�lvH� �"���$�JDL�eaF\�ut~��{��)�b��5��h��ѐmY)�QY-2
J�ݥ��WSC[4o{��f����������	9��ܠ��	����$Y8I��<�˒����ޯШ�\^�U��J:d��[+f�FdVAIdVPA{+V��IgV�b�Wv�]�ֳ+&!$�������I����D1�(S#��)I�����(˚�I(���l����M�����:Дt�b��WMb����Ӡ,�
KY\��ں�5{4k{�{7'&��H�b�܉9���'2c�D�C2�r�G���Q)�]W��UGZca65���l����5��أ:+�,��+ؤ��Z:��j��{����bn`�a��1���60�1��D,B�c��9I����ꍍ+�ڽ��U	��tt�El�V����(̂������7.�v��%,��nl�wwuL�1�K���"m�d� �Ny�a`
�d�RJ%$�.Fz�|���6�cu^���k&ƲY]-�XޖAIefA�t�@YdV��Kgv�f��6{�#�q&P�%�ő7; nt�d̂�a`V�`�Rj%$�o2�WW��o��cR�v��Z�u�ci,����l�Z���U�R]�R� ��
JY���6�uvoD�˘��d�b�Bő'8r��8c��0c���	�YsQ��c���*7���)+gj�u�b��)���,�V��l��2� ��
K($���T+���J�j����s���7.R�)��68c2F�m&�ER�Q	%r3�ٿc|=/cj�u�gZ�v����6���,�R��PRY%�Ө$���egAET�����m����s9X�&�Y8H�f��M�쉱��,AA�M���v�|�N�����l�^έTk^���S]EJY\��*�$��{t�).���A%�U
�l�U�ZWf�ws���3�:�BK�4�&kF	����)�B�$���D܌��|���{�N��t^�V�SVέ�m%��ڭ�Yܪ
Zd��)i�R�(��J�#%��Y�^�h��sݸ�&�Y��q���N�BC��8#X�523S(��9H(��>�����>��Ԯ͍�轝j�ֺ�����;���[$�BKJ���m*��UW�KJ���v�gmU4�{�Y��s�Y���8�Hq���Mɚ���8#S#��8I#��9�����M���Ꝋ���͍�Ԫ��������������D+��Ii���!%�Q[L���H�f�w�QNkf����g&���f����!�����$jpF�G	�
&�.J;��Ogx�7scw9+s��66�Z�ij����n��%��!!��KL���Em*�T$��+J�t�w��)*�u���g3sXɹ�"nD$93Srf�d�NɚE!�M�DԔMIOoW�l�N�tWf�ws�����J����������vh7qv�	-�
�T$��Ii��Ҩ�2JY�]E�ښ�k�u���5��Mα���MɚE�403C�����)����	��������͍��ݝ�����M�ֺ�����;�B�Kd��-2
Ze4��G~��Byҽ)�Et�=3Pֲ�[�ޖ�3�6r5���<znx�,I�D�LlF�tlWOIwOW��           @P 0��  ���&~Y�ǩ#����=I�fu�u�����33��F|��fffzO����38����ffg�gY�������=�3����Ni�ffq�u�HÈ�3�8�La�g�qע0È�333�Fa�G��fq�dDq�fg�y�ffffg�4�#�:�DDDG�ffg��M#N���=�)��L#�����a�u�fz2"#�8��=a�q�zC����γ�<�#䈎3�Liapٟ��"#L#��=1Fp�zS4���8N?/@aDFp����H�""#��DF�Da�~�y�DFg�0����8oTF�7���0����=	�DDDq�z0�#0�?DDi�Dq\fg�}�iry�F��zr0����=A�q�z7����y!/%��{�/b?D~�ؽ�ؽ�ؽ�ܽ� 7������ �ܽ� 7���/r�'�^���ؽ���/b�/%众��^K�y/%��             0@P p�� ?�B���B�C���(�!��\�!F�D8e3��1��#s+uM4��c�ec�am�w�i�8?��              @` Pp��� ?�/	J�1p�>,G�� ��             1 @���  ?�>������������          0Q@a��  ?!�#���������� ᙙ�����""""""4"0�^��8z�fffgYǗ�"""""""0DF�̚	�3�ffg��興����""#���A�������]x0������0��fg���33333:���D`��"0홙�<��p����.�DDDD`�����öfff| 3333338��DDDDDDDDDG�3:3� �����ϙ�""""""""0Öffp��љ�����4���������Ӷfp0πffq����ь""""#`��#�����g�������#�������l�3::$'��L��ξDF�DG�32N���N�3$̘���D`�`��"#�fgGA�p�����μ|��!�bP���"""<���a&��������1��,����tHBI��I3|�z����a�a��-"""<��t�8��̓3��pC0�p2�DDDa�338HI	�	'	$�����#F"ba�R�(����'��!	!$�38�}����C��0�e(bQӬ�$����I$��L���_8�<�1��(p0�C�n333$��HII$�L�|��}����2�R�a��\fI$��&I$�d�o��硤C0�0�)C(a�!�"<�'	&�$�I�I�xg���1)aJJa�C333$�C		!$&d�I�O/�10�aaC��DDa�32I$���I$�I3:��7�_o�DC0�a������ffd����B0�I$�ߗ�<F�a�e0�Q0�Z�33'$�L�I33$��0�"R��`���fffa�$�$�I���>z�DC�C(t""|���a�I$�I$�L�}��!�a����
P�"#ř��BI$�I�fd�g��L4�����â�Ј�ffp�g	2L��|�q��ѤD0�`�Q�"#����$��3$��vDC�8CB#ffI�Lᙙ�fy4�"""8`x��ٙ���338fffgԾ�DF���0DDDx38�ᙙ����g��M0������ Ј������333333$��a� ���fg�����ǓȈ�""0`� DDa3333333�g����DDDDD`�""0��fp��Ό����ن�����öffg����g�䈈����""0�ٙ���3333�F�`���Ѝt�����ᙙ����"0���`��:fg������O�"""""48��8fp������x�a ��ӗ�ÇFfffy89"�7��?`~��~�����D~�����,X��@ ��'39��g��M�'���i�����i������ k��      _�`F�S�z��ٔNX�㍙(,�2(�����Ѫ=!�5t㡏��c����a�ɚ�u�[�E���*z�8��fHFr�")5Pc�Pc#�(
U��e�`@�>��" �'���ÿ9FI%��B�=�W�@+fC\f�(�P� ~d�Cb��J�֡`�M�Z�&�#l�OO�B�[�^�l-�d���Md��EŬ��r�Ĥ��*5�#����K8f�3�oUq��2�%��%8�;E�IF�%rg[��l6�	��P�V���N0��WD���ZD��J� �`��k ǃr6�2d&�r����A	ǟo�ڌ���ySA�?�3=^�S(tźS�5�����W�8ܬ��Q���U���DI 6���Mkj؏���"����+��0r���[����? �<�����w�p�"�J�ཽ"�.U4�4�г~|�N�aDK};s��������m�,k%�ڰ�N6i��?�`YA�M���Z_�''҃��r��z� ��O���^�I�O�����@m�Tzo�$;��n?"J��En|N:�*q��Q��<@<�xi�4���cG��|#]������[#�_Cqp%�Q`� 몮o1����	t)Z�(/|4O�)]_<��           01!�� ?�����s|���33'����>����O�����xd����r<��P��x���'����#��Ŷ��ffx��DJ%Ŷ�͙��3�>D��16�ŖY��>���""b?m�m�[fY��=K,���8DG6�fYm��}��Ng�� ��C�^m��e��I9�Y�� ��V�e�Y�[m����y�ק��<�����Ä����%��-��m����,�<3�����m�͟A� ���XOI33<���#�A�Ae�Hɓ$�=[}�|Yg2�$��3��;��G���s$�L�:?3�x �#�d��g����RHIљ�q<1�GDG3����&g�l������"<0���36I1�""i9���!e�2���          10!@�� ?�,�Yԙ���;�GOY��zffg���莟c���I=ɲ�/<8}��I'��'�:�$�I,���=��C����$�O2�,��&�vb�o��Y̲y�Ye�I�;������_l��,�,���l��a��c�g�e�Ye�Y%�K,����a��a���Yd�u<��0�M��x���,��,�I&fYd�C�m��͆�m�x�C�e�I$�w"�ltm�m��m�"?��I$�K$��ã<�m�|��I$�,�Ã��m��m�ޏ{�Τ�Y%�6���m��l6���a�d��$�<���m��0�p��I<g����Ͷ�a�a���g����m��m�m�D1���6�Ȉ�,q�x?��"<����Cp�������m��[m�m�%0������Rť����� #       !1 AQ�a��0�q��  ?#'Q��>�~��ß���G�����Gq�c���{;�eW��g�3��2z���7��_����g�p7���#�!�i�#����^�\]�X}2�n�rf��.0e�����CP�w��~:7����������O��~��������/�e�����7B'��5����;�#�:Ù�O�2���K�y�������`_\���>���w��#��!B��c��D!}�a%�I��Gԧ�K�.N_
���
0#� �0�al�X��7}���1��g�{!	��ќ$DG!�_IK�_L����,\��C���I��ø}�'�!B�_�}#���o����&�p������^Kr������s���F{2Bp���`!�}�P��9Ϥ!`'�I3���B�H����)�X�N�s��o���xHk01�uB�aM��a�I7$�����O����)Nr�')�x��rܵq�<�CP�ah�cB�5�>b1H��&arfq�<�0ތ��[���ϓ��_\\���c�}N:�1�|�!�!v�c���$�I�&u{M㖛�2�%)�s�'�J{��Nw�#������c�;��F1�7ɚ=��HI$�a��)C)jS��9�{��9�|���c�>���G�!j���#B;���I$�I��2�2�rԧ)bS�����>Np�`�#�at�� `��j1���aB�HI$�� �a�>J��X'�[���Ns��q���$��a�}��dc��c���L���^C�a�2�S%-JS��j'��Rܵ)�S���ϓ��c������;�7��&Iy�$�0��Àe(�4�r��'0���s���^�>��#�0�� B�"�!`���HI$�!�C2��)�[0j����>`?$GQ�w�ly��{[�B�I$��e(e0ÁK$�p�bͲR԰<Ҝ�+����n�!� 0 �0�$��I$�I$1>2�e�� ً��5��`s���㩒1�����`��#�݀�`��I$���,��2�/sŻ�0r�-W,O��(��|�`�1�v�x�f�|��bՀ�p�bI�$��a�bd�0�9|*�pj�j�f��ԡ��D��s[�n�c�0��b!1�I$��/a�a�P�)�
�]�5+t혖�(o~	쑎����7bź8�HBM^^�0�1�0�S�'�����&ؼ��Ks��m�B1ũŢ�.�~�H�$����a��C~	�J�N\����[����)�>�'���� �/���W��#�&$�/b0�B2ܥ�r��;����=���9�9M�RIF1���kv@��@	I%� ��C0�0䔲O��[0=
�Z%�JZ�G�{���!]��n�-X�#I%��0�0�0�)Js��潼�`|��h��
zԧ-K���p�5�1�0w#���!I$���a����0����Ns�`X�$���=�x
�Ç�B��c�F�kWʂ�$Ԓy%��:�0��A�a�2�KfkF/0h'�Z	|B��au2L�q�c���.֬EqCB���P�a�C(�:����)�w�J{��ĥl����)K�$��!�:��v�a�����Ofz���0����R���d�)NZ2Sܥ#�C��)J}̓0�cj6�#�1�c�j�/e�R�u0�Sħ9��br���r^3��9J����g�0�c]�wH�����&��e�C0�sܧ9JR��O��NR��=jr��0����u�p�#��0�#Gp�$����w{0� �J{��9�S���_Iy)�s��|�E^ݼ��\ɸ�L5Ǳ�uF0�#�M�:���_x`2�Nrܧ-�Rԥ-䥩�\�y��/c������<�;��w�=�w���!{؈�ba�2����\�����js��)2�婚��1_Q�g,�B0�c�Q��~ FHI���\FH�"pX�=˓���S��=�R��rO��G0Z���c�펣�|�c�=�	������2�Rܷ,�r��|��r[�������P�P�P�0�]������'�Hnu{}D9�C(e��jr���J~��=��9jR��苨�<�cj�n#���!��y"0E�DF-�\gx-_I�\�%>Kr�������p�F?33�Q�a�N^��q}C}G#��Cw]C-Js��=JS�-�s�0\��)`���,2bq=��7���'P��ߜ��";ؾ�:��U�Թ)�r��)jz��s<F_���=�x��{����r"/��v.��WY�n�r{��=�Z��{%/��E�~�y9�5����ݷw?��KlG#�X��߳�'��\��.`�Kd�9����\c�I��-/�=�J�b>���r}�y���$y	zy�IO$H������~cF�ȼF�-ߕ~e�����^�ѿ�o�[����M��[G� -�{��.�� !�_�?�_� ����?�������?����Q���������S������?�������?��~�W࿧�m��?���������O��o����� O��/��?ռ��{V� =�_�y�V� ��o����}?���

Название файла: MainScreen.js
Расположение файла: ./components\MainScreen.js

import React, { useState, useCallback, useRef, useEffect, useMemo } from 'react';
import ReactFlow, {
  addEdge,
  useNodesState,
  useEdgesState,
  Background,
  BackgroundVariant,
  Controls,
  ReactFlowProvider,
  useStoreApi,
  Position,
} from 'react-flow-renderer';
import NodeMenu from './NodeMenu';
import CustomNode from './CustomNode';
import FloatingEdge from './FloatingEdge';
import CustomConnectionLine from './CustomConnectionLine';
import './style.css';

const initialNodes = [
  {
    id: '1',
    type: 'custom',
    position: { x: 250, y: 5 },
    data: { label: 'Сообщение' },
  },
];

const initialEdges = [];

const connectionLineStyle = {
  strokeWidth: 3,
  stroke: 'black',
};

const defaultEdgeOptions = {
  style: { strokeWidth: 3, stroke: 'black' },
  type: 'floating',
};

const MIN_DISTANCE = 150;

const MainScreen = () => {
  const store = useStoreApi();
  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);
  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);
  const [menuVisible, setMenuVisible] = useState(false);
  const [menuPosition, setMenuPosition] = useState({ x: 0, y: 0 });
  const reactFlowWrapper = useRef(null);
  const reactFlowInstance = useRef(null);
  const[ vie, setVie] =useState(false);
  const onConnect = useCallback(
    (params) => setEdges((eds) => addEdge({ ...params, type: 'floating' }, eds)),
    [setEdges]
  );

  const onConnectEnd = (event) => {
    const targetIsPane = event.target.classList.contains('react-flow__pane');
    if (targetIsPane) {
      const { clientX: x, clientY: y } = event;
      setMenuPosition({ x, y });
      setMenuVisible(true);
      setVie(true);
      console.log("Отпустили связь, отображаем меню");
    }
  };

  const getClosestEdge = useCallback((node) => {
    const { nodeInternals } = store.getState();
    const internalNode = nodeInternals.get(node.id);

    const closestNode = Array.from(nodeInternals.values()).reduce(
      (res, n) => {
        if (n.id !== internalNode.id) {
          const dx = n.positionAbsolute.x - internalNode.positionAbsolute.x;
          const dy = n.positionAbsolute.y - internalNode.positionAbsolute.y;
          const d = Math.sqrt(dx * dx + dy * dy);

          if (d < res.distance && d < MIN_DISTANCE) {
            res.distance = d;
            res.node = n;
          }
        }

        return res;
      },
      {
        distance: Number.MAX_VALUE,
        node: null,
      },
    );

    if (!closestNode.node) {
      return null;
    }

    const closeNodeIsSource =
      closestNode.node.positionAbsolute.x < internalNode.positionAbsolute.x;

    return {
      id: closeNodeIsSource
        ? `${closestNode.node.id}-${node.id}`
        : `${node.id}-${closestNode.node.id}`,
      source: closeNodeIsSource ? closestNode.node.id : node.id,
      target: closeNodeIsSource ? node.id : closestNode.node.id,
    };
  }, [store]);

  const onNodeDrag = useCallback(
    (_, node) => {
      const closeEdge = getClosestEdge(node);

      setEdges((es) => {
        const nextEdges = es.filter((e) => e.className !== 'temp');

        if (
          closeEdge &&
          !nextEdges.find(
            (ne) =>
              ne.source === closeEdge.source && ne.target === closeEdge.target,
          )
        ) {
          closeEdge.className = 'temp';
          nextEdges.push(closeEdge);
        }

        return nextEdges;
      });
    },
    [getClosestEdge, setEdges]
  );

  const onNodeDragStop = useCallback(
    (_, node) => {
      const closeEdge = getClosestEdge(node);

      setEdges((es) => {
        const nextEdges = es.filter((e) => e.className !== 'temp');

        if (
          closeEdge &&
          !nextEdges.find(
            (ne) =>
              ne.source === closeEdge.source && ne.target === closeEdge.target,
          )
        ) {
          nextEdges.push(closeEdge);
        }

        return nextEdges;
      });
    },
    [getClosestEdge, setEdges]
  );

  const showMenu = (event) => {
    event.preventDefault();
    console.log("Правый клик, отображаем меню");
    setMenuPosition({ x: event.clientX, y: event.clientY });
    setMenuVisible(true);
  };

  const hideMenu = () => {
    console.log("Скрываем меню");
    setMenuVisible(false);
  };

  const addNode = (type) => {
    if (reactFlowInstance.current) {
      const { project } = reactFlowInstance.current;

      const newNode = {
        id: (nodes.length + 1).toString(),
        type: 'custom',
        position: project({
          x: menuPosition.x - reactFlowWrapper.current.getBoundingClientRect().left,
          y: menuPosition.y - reactFlowWrapper.current.getBoundingClientRect().top,
        }),
        data: { label: type },
        sourcePosition: Position.Right,
        targetPosition: Position.Left,
      };
      setNodes((nds) => nds.concat(newNode));
      hideMenu(); // Hide menu after adding node
    }
  };

  const deleteNode = useCallback(
    (nodeId) => {
      setNodes((nds) => nds.filter((node) => node.id !== nodeId));
      setEdges((eds) => eds.filter((edge) => edge.source !== nodeId && edge.target !== nodeId));
    },
    [setNodes, setEdges]
  );

  const deleteEdge = useCallback(
    (edgeId) => {
      setEdges((eds) => eds.filter((edge) => edge.id !== edgeId));
    },
    [setEdges]
  );

  const nodeTypes = useMemo(() => ({
    custom: (props) => <CustomNode {...props} deleteNode={deleteNode} />,
  }), [deleteNode]);

  const edgeTypes = useMemo(() => ({
    floating: (props) => <FloatingEdge {...props} data={{ onRemove: deleteEdge }} />,
  }), [deleteEdge]);

  const onInit = (instance) => {
    reactFlowInstance.current = instance;
  };

  useEffect(() => {
    const handleClickOutside = (event) => {
      console.log("Клик за пределами меню, кнопка:", event.button);
      // Проверка на левую кнопку мыши
      if (event.button !== 0) return;
      console.log("Клик левой кнопкой мыши, проверка видимости меню");
      if (menuVisible && !event.target.closest('.node-menu')) {
        console.log("Клик вне меню, скрываем меню");
        hideMenu();
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    console.log("Добавлен обработчик mousedown");
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
      console.log("Удален обработчик mousedown");
    };
  }, [menuVisible]);

  const handleClick = (event) => {
    if (event.button === 0) { // 0 is the left mouse button
      console.log("Левая кнопка мыши нажата по div");
      
      if (menuVisible && !event.target.closest('.node-menu')) {
        console.log("Клик вне меню, скрываем меню");
        if (vie === false) {console.log("Клик вне меню, скрываем меню и не после обрыва связи"); hideMenu();}
        else { setVie(false);}
      }
    }
  };

  return (
    <div
      style={{
        position: 'relative',
        height: '100vh',
        width: '100vw',
        backgroundColor: 'rgb(229 229 229)',
        overflow: 'hidden',
        willChange: 'transform',
      }}
      onContextMenu={showMenu}
      onClick={handleClick}
    >
      <div
        ref={reactFlowWrapper}
        style={{
          position: 'absolute',
          top: 0,
          left: 0,
          width: '100%',
          height: '100%',
        }}
      >
        <ReactFlow
          attributionPosition="none"
          nodes={nodes}
          edges={edges}
          onNodesChange={onNodesChange}
          onEdgesChange={onEdgesChange}
          onConnect={onConnect}
          onConnectEnd={onConnectEnd}
          onNodeDrag={onNodeDrag}
          onNodeDragStop={onNodeDragStop}
          onInit={onInit}
          fitView
          nodeTypes={nodeTypes}
          edgeTypes={edgeTypes}
          defaultEdgeOptions={defaultEdgeOptions}
          connectionLineStyle={connectionLineStyle}
          connectionLineComponent={CustomConnectionLine}
          zoomOnScroll={true}
          minZoom={0.5}
          maxZoom={2}
        >
          <Background variant={BackgroundVariant.Dots} gap={12} size={1} />
          <Controls />
        </ReactFlow>
      </div>
      {menuVisible && <NodeMenu position={menuPosition} onSelect={addNode} />}
    </div>
  );
};

const MainScreenWrapper = () => (
  <ReactFlowProvider>
    <MainScreen />
  </ReactFlowProvider>
);

export default MainScreenWrapper;


Название файла: ButtonNameModal.js
Расположение файла: ./components\ButtonNameModal.js

import React, { useState } from 'react';
import ReactDOM from 'react-dom';
import './Modal.css';

const ButtonNameModal = ({ onClose, onSave }) => {
  const [name, setName] = useState('');

  const handleSave = () => {
    onSave(name);
    onClose();
  };

  return ReactDOM.createPortal(
    <div className="modal1">
      <div className="modal-content11">
        <span className="close" onClick={onClose}>&times;</span>
        <h2>Введите название кнопки</h2>
        <div className="modal-line" style={{display: "grid"}}>
        <input
          type="text"
          placeholder="Название"
          value={name}
          onChange={(e) => setName(e.target.value)}
        />
        <button onClick={handleSave}>Сохранить</button>
        </div>

        
      </div>
    </div>,
    document.getElementById('modal-root')
  );
};

export default ButtonNameModal;


Название файла: FloatingEdge.js
Расположение файла: ./components\FloatingEdge.js

import React from 'react';
import { getBezierPath } from 'react-flow-renderer';

const FloatingEdge = ({ id, sourceX, sourceY, targetX, targetY, markerEnd, data }) => {
  const edgePath = getBezierPath({
    sourceX,
    sourceY,
    sourcePosition: 'right',
    targetX,
    targetY,
    targetPosition: 'left',
  });

  const midX = (sourceX + targetX) / 2;
  const midY = (sourceY + targetY) / 2;

  return (
    <>
      <path
        id={id}
        className="react-flow__edge-path"
        d={edgePath}
        markerEnd={markerEnd}
      />
      {/* <span className="close" onClick={() => data.onRemove(id)}>&times;</span> */}
      <g  transform={`translate(${midX},${midY})`} onClick={() => data.onRemove(id)}>
        {/* <circle cx="0" cy="0" r="10" fill="white" stroke="red" strokeWidth="2" /> */}
        <text className='close' color='#333' x="-5" y="5" cursor={'pointer'} fontSize="25"  fontWeight="bold">&times;</text>
      </g>
    </>
  );
};

export default FloatingEdge;


Название файла: Modal.css
Расположение файла: ./components\Modal.css

.modal1 {
    display: flex;
    justify-content: center;
    align-items: center;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4);
}
.modaldivbutton{
    display: flex;
    justify-content: space-around;
}
.start {
    display: flex; 
    flex-direction: column;
    align-items: center; 
    justify-content: center; 
    /* height: "100vh" ;/ */
    width: 100%;
    height: 100vh;
    overflow: hidden;
    position: relative;
    background: url('./123.jpg');
    background-size: cover;

}
.btn-go {
    padding: 10px;
    border: 0.3px solid #ffffff4f;
    border-radius: 4px;
    background-color: #ffffff66;
    cursor: pointer;
    color: #ffffff;
    font-family: sans-serif;
    font-size: 16px;
}

.modal-content2{
    background-color: #ffffff1c;
    /* -webkit-backdrop-filter: blur(5px); */
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(5px);
    padding: 20px;
    border: 1px solid #ffffff52;
    width: 300px;
    color: white;
    text-align: center;
    margin-right: 40px;
    border-radius: 10px;
}

.modal-content2 p{
    white-space: pre-wrap; /* Сохраняет пробелы и переносы строк */
    word-wrap: break-word; /* Позволяет перенос длинных слов */
    background-color: #00000033;
    
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    text-align: left;
} 
.btn-go:hover,
.btn-go:focus { 
    padding: 10px;
    border: 0.3px solid #ffffff4f;
    border-radius: 4px;
    background-color: #36225e40;
    cursor: pointer;
    color: #ffffff;
    font-family: sans-serif;
    font-size: 16px;
}


.modal-content1 {
    background-color: #ffffff1c;
    /* -webkit-backdrop-filter: blur(5px); */
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(5px);
    padding: 20px;
    border: 1px solid #ffffff52;
    width: 300px;
    height: 43%;

    color: white;
    text-align: center;
    border-radius: 10px;
}

.modal-content11 {
    background-color: #ffffff1c;
    /* -webkit-backdrop-filter: blur(5px); */
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(5px);
    padding: 20px;
    border: 1px solid #ffffff52;
    width: 300px;
    /* height: 43%; */

    color: white;
    text-align: center;
    border-radius: 10px;
}

.close {
    position: absolute;
    top: -1px;
    right: 10px;
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close1 {
    position: absolute;
    top: -1px;
    right: 10px;
    color: #aaa;
    float: right;
    font-size: 20px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}
.close1:hover,
.close1:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}
input,
button {
    margin: 10px 0;
    padding: 10px;
    border: 1px solid #888;
    border-radius: 5px;
}

Название файла: TokenValidationScreen.js
Расположение файла: ./components\TokenValidationScreen.js

// src/components/TokenValidationScreen.js
import React from "react";
import TokenInput from "./TokenInput";

const TokenValidationScreen = ({ onTokenValid }) => {
  return (
    <div className="start" >
      <TokenInput onTokenValid={onTokenValid} />
    </div>
  );
};

export default TokenValidationScreen;


Название файла: ButtonTypeModal.js
Расположение файла: ./components\ButtonTypeModal.js

import React from 'react';
import ReactDOM from 'react-dom';
import './Modal.css';

const ButtonTypeModal = ({ onClose, onSelect }) => {
  return ReactDOM.createPortal(
    <div className="modal1">
      <div className="modal-content11">
        <span className="close" onClick={onClose}>&times;</span>
        <h2>Выберите тип кнопки</h2>
        <div className="modaldivbutton">
        <button onClick={() => onSelect('link')}>Кнопка ссылка</button>
        <button onClick={() => onSelect('action')}>Кнопка действие</button>
        </div>
      </div>
    </div>,
    document.getElementById('modal-root')
  );
};

export default ButtonTypeModal;


Название файла: NodeMenu.js
Расположение файла: ./components\NodeMenu.js

import React from 'react';

const NodeMenu = ({ position, onSelect }) => {
  const menuItems = [
    'Сообщение',
    'Условие',
    'Получение текста',
    'Получение медиа',
    'Запросить геолокацию',
    'Запросить контакт',
  ];
  return (
    <div
      className="node-menu"
      style={{
        position: 'absolute',
        top: position.y,
        left: position.x,
        background: 'white',
        border: '1px solid #ccc',
        borderRadius: '4px',
        boxShadow: '0 2px 10px rgba(0,0,0,0.2)',
        zIndex: 1000,
      }}
    >
      {menuItems.map((item) => (
        <div
          key={item}
          style={{
            padding: '8px 12px',
            cursor: 'pointer',
            borderBottom: '1px solid #eee',
          }}
          onClick={() => onSelect(item)}
        >
          {item}
        </div>
      ))}
    </div>
  );
};

export default NodeMenu;


Название файла: style.css
Расположение файла: ./components\style.css

.react-flow__handle {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: white;
}

textarea {
  box-sizing: border-box;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 4px;
}
#token-input {
  margin: 10px 0;
  padding: 10px;
  border: 1px solid #ffffff63;
  border-radius: 5px;
  background-color:  #00000033;
  color: white;
}
button {
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 4px;
  background-color: #f0f0f0;
  cursor: pointer;
}


.react-flow__edge-path {
  background-color: white;
  stroke: #333;
  stroke-width: 2;
}

.react-flow__attribution {
  display: none;
}






.node-menu {
  position: absolute;
  background: white;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  z-index: 1000;
}

.react-flow__connection-path {
  stroke: #ff0000;
  /* Яркий красный цвет */
  stroke-width: 2;
  stroke-dasharray: 5, 5;
}

.temp .react-flow__edge-path {
  stroke: #ff0000;
  /* Яркий красный цвет */
  stroke-width: 2;
  stroke-dasharray: 5, 5;
}



Название файла: TokenInput.js
Расположение файла: ./components\TokenInput.js

import React, { useState } from "react";
// import axios from "axios";

const TokenInput = ({ onTokenValid }) => {
  const [token, setToken] = useState("");
  const [error, setError] = useState("");

  const handleInputChange = (e) => {
    setToken(e.target.value);
  };

  const handleSubmit = async () => {
    try {
      if (token) {
        onTokenValid();
      }
      //   const response = await axios.post("http://localhost:5000/tokenCheck", { token });
      //   if (response.data.valid) {
      //     onTokenValid();
      //   } else {
      //     setError("Invalid token format.");
      //   }
    } catch (err) {
      setError("Error checking token.");
    }
  };

  return (
    <div style={{ display: "flex", padding: "20px", textAlign: "center" }}>
      <div className="modal-content2">
        <h2>ENTER TOKEN</h2>
        <p>
Для этого:<br></br>
1. Открой отца ботов - @BotFather <br></br>

2. Создай нового бота<br></br>(команда /newbot)<br></br>

3. Отец отправит тебе API token твоего бота (формата 123456789:ASDFABC-DEF1234gh***)<br></br>скопируй этот токен и отправь его мне.<br></br><br></br>

Важно! Не используй бота, которого ты привязывал к другому сервису (или к другим ботам)!
        </p>
        <div style={{ display: "grid" }}>

          <a className="btn-go" target="_blank"  rel="noopener noreferrer"style={{textDecoration:"none"}} href="https://t.me/BotFather">OPEN BOTFATHER</a>
        </div>
      </div>
      <div className="modal-content1">
        <h2>ENTER TOKEN</h2>
        <div style={{ display: "grid" }}>
          <input
            type="text"
            value={token}
            onChange={handleInputChange}
            id="token-input"
            name="token"
          />
          <button className="btn-go" onClick={handleSubmit}>GO</button>
        </div>
      </div>
      {error && <p style={{ color: "red" }}>{error}</p>}
    </div>
  );
};

export default TokenInput;


Название файла: CustomNode.js
Расположение файла: ./components\CustomNode.js

import React, { useState } from 'react';
import { Handle, Position } from 'react-flow-renderer';
import ButtonTypeModal from './ButtonTypeModal';
import ButtonNameModal from './ButtonNameModal';

const CustomNode = ({ id, data, deleteNode }) => {
  const [showDelete, setShowDelete] = useState(false);
  const [buttons, setButtons] = useState([]);
  const [showButtonOptions, setShowButtonOptions] = useState(false);
  const [showNameModal, setShowNameModal] = useState(false);
  const [currentButtonIndex, setCurrentButtonIndex] = useState(null);

  const onMouseEnter = () => setShowDelete(true);
  const onMouseLeave = () => setShowDelete(false);

  const addButton = (type) => {
    const newButton = {
      id: buttons.length + 1,
      type,
      label: 'Введите название',
    };
    setButtons([...buttons, newButton]);
    setShowButtonOptions(false);
  };

  const editButtonLabel = (index) => {
    setCurrentButtonIndex(index);
    setShowNameModal(true);
  };

  const saveButtonLabel = (name) => {
    const updatedButtons = buttons.slice();
    updatedButtons[currentButtonIndex].label = name;
    setButtons(updatedButtons);
    setCurrentButtonIndex(null);
  };

  return (
    <div
      style={{
        position: 'relative',
        backdropFilter: 'blur(1px)',
        backgroundColor: '#ffffff5c',
        padding: 10,
        border: '1px solid #ddd',
        borderRadius: 5,
        width: 200,
        willChange: 'transform',
      }}
      id='modal'
      onMouseEnter={onMouseEnter}
      onMouseLeave={onMouseLeave}
    >
      {showDelete && (
        // <div
        //   style={{
        //     position: 'absolute',
        //     top: -10,
        //     right: -10,
        //     width: 24,
        //     height: 24,
        //     background: 'red',
        //     color: 'white',
        //     borderRadius: '50%',
        //     display: 'flex',
        //     alignItems: 'center',
        //     justifyContent: 'center',
        //     cursor: 'pointer',
        //     fontSize: 16,
        //   }}
          
        // >
        <span className="close1" onClick={() => deleteNode(id)}>&times;</span>
        // </div>
      )}
      <div>{data.label}</div>
      <textarea
        placeholder="Введите ваше сообщение"
        style={{
          width: '100%',
          height: '40px',
          margin: '10px 0',
          resize: 'none',
        }}
      />
      {buttons.map((button, index) => (
        <button
          key={button.id}
          onDoubleClick={() => editButtonLabel(index)}
          style={{
            display: 'block',
            width: '100%',
            marginBottom: '10px',
          }}
        >
          {button.label}
        </button>
      ))}
      {showButtonOptions ? (
        <ButtonTypeModal
          onClose={() => setShowButtonOptions(false)}
          onSelect={addButton}
        />
      ) : (
        <button
          onClick={() => setShowButtonOptions(true)}
          style={{
            display: 'block',
            width: '100%',
          }}
        >
          Добавить кнопку
        </button>
      )}
      {showNameModal && (
        <ButtonNameModal
          onClose={() => setShowNameModal(false)}
          onSave={saveButtonLabel}
        />
      )}
      <Handle
        type="source"
        position={Position.Right}
        style={{ top: "40px", background: '#555' }}
      />
      <Handle
        type="target"
        position={Position.Left}
        style={{ top:"40px", background: '#888' }} 
      />
    </div>
  );
};

export default CustomNode;

